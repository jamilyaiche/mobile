// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`button tests test large default button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(33, 122, 239, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 22,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 16,
              "lineHeight": 18,
            },
            Object {
              "color": "rgba(255, 255, 255, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test large default button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(33, 122, 239, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 22,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255, 255, 255, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 16,
              "lineHeight": 18,
            },
            Object {
              "color": "rgba(255, 255, 255, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test large primary button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 22,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 16,
              "lineHeight": 18,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test large primary button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 22,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(33, 122, 239, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 16,
              "lineHeight": 18,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test large transparent button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 10,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 22,
      "shadowRadius": 5,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 16,
              "lineHeight": 18,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test large transparent button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 10,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 22,
      "shadowRadius": 5,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(33, 122, 239, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 16,
              "lineHeight": 18,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test normal default button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(33, 122, 239, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 16,
            },
            Object {
              "color": "rgba(255, 255, 255, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test normal default button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(33, 122, 239, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255, 255, 255, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 16,
            },
            Object {
              "color": "rgba(255, 255, 255, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test normal primary button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 16,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test normal primary button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 18,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(33, 122, 239, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 16,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test normal transparent button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 10,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 18,
      "shadowRadius": 5,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 16,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test normal transparent button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 10,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 18,
      "shadowRadius": 5,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(33, 122, 239, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 16,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test small default button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(33, 122, 239, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 12,
              "lineHeight": 14,
            },
            Object {
              "color": "rgba(255, 255, 255, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test small default button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(33, 122, 239, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255, 255, 255, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 12,
              "lineHeight": 14,
            },
            Object {
              "color": "rgba(255, 255, 255, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test small primary button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 12,
              "lineHeight": 14,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test small primary button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderRadius": 4,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 14,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(33, 122, 239, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 12,
              "lineHeight": 14,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test small transparent button snapshot 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 10,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 14,
      "shadowRadius": 5,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 12,
              "lineHeight": 14,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;

exports[`button tests test small transparent button snapshot with icon 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "borderRadius": 10,
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "center",
      "marginVertical": 5,
      "opacity": 1,
      "padding": 14,
      "shadowRadius": 5,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
          "padding": 1,
          "paddingRight": 10,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(33, 122, 239, 1)",
              "fontSize": 14,
            },
            undefined,
            Object {
              "fontFamily": "fontello",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignSelf": "center",
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "fontFamily": "Roboto-Bold",
              "letterSpacing": 1,
              "textAlign": "center",
            },
            Object {
              "fontSize": 12,
              "lineHeight": 14,
            },
            Object {
              "color": "rgba(33, 122, 239, 1)",
            },
            Object {},
            false,
          ]
        }
      >
        test
      </Text>
    </View>
  </View>
</View>
`;
